package main

import "fmt"

/*
05-递归转非递归：
递归调用的过程中会将每一次调用的参数，局部变量都保存在了对应的栈帧（Stack Frame）中
栈帧：开辟给每一个函数的栈空间就叫栈帧

若递归调用深度较大，会占用比较多的栈空间，甚至会导致栈溢出
在有些时候，递归会存在大量的重复计算，性能较差
这时候可以考虑将递归转换为非递归（递归100%可以转换成非递归）
 */

func main() {
	log(4)
}
func log(n int) {
	if n < 1 {
		return
	}
	log(n-1)
	v := n + 10
	fmt.Println(v)
}











